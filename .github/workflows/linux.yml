name: Linux

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test-rust:
    name: LINUX Run unit-tests on rust crates
    runs-on: ubuntu-latest
    container: yamadapc/augmented-audio-linux-ci:0.1.3
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-test-cache-${{ hashFiles('**/Cargo.lock') }}
      - name: Set-up rust toolchain
        run: rustup default stable
      - name: Install uniffi bindgen
        run: |
          if ! [ -x "$(command -v uniffi-bindgen)" ]; then
            cargo install uniffi_bindgen
          fi
      - name: Test
        env:
          COVERALLS_TOKEN: ${{ secrets.COVERALLS_TOKEN }}
        run: |
          cargo tarpaulin --workspace \
              --features story \
              --coveralls $COVERALLS_TOKEN \
              --exclude augmented-ui \
              --exclude audiounit \
              --exclude basedrop \
              --exclude gfx \
              --exclude iced \
              --exclude iced-baseview \
              --exclude iced_audio \
              --exclude libloading \
              --exclude lyon \
              --exclude pathfinder \
              --exclude piet \
              --exclude plotters \
              --exclude skribo \
              --exclude vst \
              --exclude example-iced-xcode-integration \
              --exclude avfaudio-sys \
              --exclude recording_buddy \
              --exclude darwin-webkit \
              --exclude webview-holder \
              --exclude macos-bundle-resources
  build-rust:
    name: LINUX Build release rust crates
    runs-on: ubuntu-latest
    container: yamadapc/augmented-audio-linux-ci:0.1.3
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-release-cache-${{ hashFiles('**/Cargo.lock') }}
    - name: Set-up rust toolchain
      run: rustup default stable
    - name: Install dependencies
      run: ./scripts/install-ubuntu-dependencies.sh
    - name: Install uniffi bindgen
      run: |
        if ! [ -x "$(command -v uniffi-bindgen)" ]; then
          cargo install uniffi_bindgen
        fi
    - name: Build release
      run: |
        cargo build --release --verbose --workspace \
            --exclude augmented-ui \
            --exclude audiounit \
            --exclude example-iced-xcode-integration \
            --exclude avfaudio-sys \
            --exclude recording_buddy \
            --exclude darwin-webkit \
            --exclude macos-bundle-resources
    - name: Upload plugin-host binary
      uses: actions/upload-artifact@v2
      with:
        name: ${{ runner.os }}-plugin-host
        path: ./target/release/plugin-host
    - name: Upload plugin-host-gui2 binary
      uses: actions/upload-artifact@v2
      with:
        name: ${{ runner.os }}-plugin-host-gui2
        path: ./target/release/plugin-host-gui2
    - name: Upload tremolo-plugin dylib
      uses: actions/upload-artifact@v2
      with:
        name: ${{ runner.os }}-libtas_v2-dylib
        path: ./target/release/libtas_v2.dylib

