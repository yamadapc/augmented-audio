name: Linux

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always
  RUSTUP_HOME: /root/.rustup
  CARGO_HOME: /root/.cargo

jobs:
  test-rust:
    name: Run unit-tests on rust crates ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    container: ghcr.io/yamadapc/augmented-audio-builder:latest
    strategy:
      matrix:
        os: [ubuntu-latest]

    env:
      RUST_BACKTRACE: full

    steps:
      - name: Setup path
        run: |
          echo "/root/.cargo/bin" >> $GITHUB_PATH
          ls "/root/.cargo/"
      - uses: actions/checkout@v2
        with:
          submodules: recursive
          lfs: true
      - uses: Swatinem/rust-cache@v2
        with:
          shared-key: "rust-cache-linux"

      - name: Test with coverage
        env:
          COVERALLS_TOKEN: ${{ secrets.COVERALLS_TOKEN }}
        if: ${{ env.COVERALLS_TOKEN != 0 }}
        run: |
          cargo llvm-cov nextest --workspace \
              --features story \
              --lcov \
              --output-path ./lcov.info \
              --ignore-filename-regex "(.*crates/(vendor|spikes|scripts|augmented/gui|.*examples|augmented/development|.*midir.*|apps/daw|apps/demo-plugin|apps/tremolo-plugin|apps/synth|.*codegen|)/.*)|bridge-generated.rs" \
              --exclude assert-no-alloc \
              --exclude augmented-ui \
              --exclude audiounit \
              --exclude basedrop \
              --exclude midir \
              --exclude gfx \
              --exclude iced \
              --exclude iced-baseview \
              --exclude iced_audio \
              --exclude libloading \
              --exclude lyon \
              --exclude pathfinder \
              --exclude piet \
              --exclude plotters \
              --exclude skribo \
              --exclude vst \
              --exclude example-iced-xcode-integration \
              --exclude avfaudio-sys \
              --exclude recording_buddy \
              --exclude darwin-webkit \
              --exclude webview-holder \
              --exclude macos-bundle-resources

#          coveralls-lcov --repo-token $COVERALLS_TOKEN lcov.info

      - name: Test
        env:
          COVERALLS_TOKEN: ${{ secrets.COVERALLS_TOKEN }}
        if: ${{ env.COVERALLS_TOKEN == 0 }}
        run: |
          cargo test --workspace \
              --features story \
              --exclude augmented-ui \
              --exclude audiounit \
              --exclude assert-no-alloc \
              --exclude basedrop \
              --exclude midir \
              --exclude gfx \
              --exclude iced \
              --exclude iced-baseview \
              --exclude iced_audio \
              --exclude libloading \
              --exclude lyon \
              --exclude pathfinder \
              --exclude piet \
              --exclude plotters \
              --exclude skribo \
              --exclude vst \
              --exclude example-iced-xcode-integration \
              --exclude avfaudio-sys \
              --exclude recording_buddy \
              --exclude darwin-webkit \
              --exclude webview-holder \
              --exclude macos-bundle-resources

      - name: Deploy to GitHub Pages
        if: success() and github.ref == 'ref/head/master'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./target/llvm-cov/html
          destination_dir: coverage

#      - name: Upload tarpaulin report
#        uses: actions/upload-artifact@v2
#        with:
#          name: tarpaulin-report
#          path: ./tarpaulin-report

  build-rust:
    name: Build release rust crates ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    container: ghcr.io/yamadapc/augmented-audio-builder:latest
    strategy:
      matrix:
        os: [ubuntu-latest]
    steps:
    - name: Setup path
      run: |
        echo "/root/.cargo/bin" >> $GITHUB_PATH
        ls "/root/.cargo/"
    - uses: actions/checkout@v2
      with:
        submodules: recursive
        lfs: true
    - uses: Swatinem/rust-cache@v2
      with:
        shared-key: "rust-cache-linux"
    - name: Build release
      run: |
        cargo build --release --workspace \
            --exclude augmented-ui \
            --exclude audiounit \
            --exclude example-iced-xcode-integration \
            --exclude avfaudio-sys \
            --exclude recording_buddy \
            --exclude darwin-webkit \
            --exclude macos-bundle-resources
    - name: Run snapshot tests
      run: |
        ./scripts/dev.sh test-snapshots
    - name: Upload plugin-host binary
      uses: actions/upload-artifact@v2
      with:
        name: ${{ runner.os }}-plugin-host
        path: ./target/release/plugin-host
    - name: Upload plugin-host-gui2 binary
      uses: actions/upload-artifact@v2
      with:
        name: ${{ runner.os }}-plugin-host-gui2
        path: ./target/release/plugin-host-gui2
    - name: Upload tremolo-plugin dylib
      uses: actions/upload-artifact@v2
      with:
        name: ${{ runner.os }}-libtas_v2-dylib
        path: ./target/release/libtas_v2.dylib
