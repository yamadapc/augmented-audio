[package]
name = "looper-processor"
version = "0.1.0"
edition = "2018"
license = "MIT"
authors = ["Pedro Tacla Yamada (@yamadapc) <tacla.yamada@gmail.com>"]
homepage = "https://github.com/yamadapc/augmented-audio"
repository = "https://github.com/yamadapc/augmented-audio"

[lib]
crate-type = ["lib", "staticlib"]

[dependencies]
log = "^0.4.14"
basedrop = "^0.1.2"
num = "^0.4.0"
num-traits = "0.2.14"
num-derive = "0.3.3"
rand = "0.8.4"
mockall = "0.11.0"
atomic_refcell = "0.1.8"
strum = "0.24.0"
strum_macros = "0.24.0"
itertools = "0.10"
lockfree = "0.5.1"
assert_no_alloc = { version = "1.1.2", features = ["disable_release"], default-features = false }
midir = { version = "0.8.0-pre", path = "../../../augmented/data/augmented-midi/midir" }
crossbeam = "0.8"
anyhow = "1.0"
thiserror = "1.0"
rustc-hash = "1.1"
lazy_static = "1.4.0"
# Documentation
aquamarine = "0.1"

# Application / Project management things
actix-system-threads = { path = "../../../augmented/application/actix-system-threads" }
actix = "0.13.0"
tokio = { version = "1.17", features = ["fs"] }
serde = "1.0"
serde_derive = "1.0"
rmp-serde = "1.0"
bytesize = { version = "1.1.0", features = ["serde"] }
tempdir = "0.3"
uuid = { version = "1.0", features = ["v4"] }
augmented-analytics = { path = "../../../augmented/ops/augmented-analytics" }
chrono = "0.4"

# Audio
cpal = "0.13.5"
audio-processor-metronome = { path = "../../../augmented/audio/audio-processor-metronome" , version = "1.0.0-alpha.3" }
atomic-queue = { path = "../../../augmented/data/atomic-queue" , version = "1.0.0-alpha.4" }
augmented-adsr-envelope = { version = "0.1.0-alpha.6", path = "../../../augmented/audio/adsr-envelope" }
augmented-atomics = { path = "../../../augmented/data/atomics", version = "0.1.0-alpha.8" }
augmented-playhead = { path = "../../../augmented/data/augmented-playhead", version = "0.1.0-alpha.7" }
audio-garbage-collector = { version = "1.0.0-alpha.5", path = "../../../augmented/audio/audio-garbage-collector" }
audio-processor-standalone = { version = "1.0.0-alpha.12", path = "../../../augmented/application/audio-processor-standalone" }
audio-processor-standalone-midi = { path = "../../../augmented/application/audio-processor-standalone-midi", version = "1.0.0-alpha.10" }
audio-processor-standalone-osc = { path = "../../../augmented/application/audio-processor-standalone-osc" }
audio-processor-graph = { path = "../../../augmented/audio/audio-processor-graph" }
audio-processor-traits = { version = "1.0.0-alpha.7", path = "../../../augmented/audio/audio-processor-traits" }
wisual-logger = { version = "0.1", path = "../../../augmented/ops/wisual-logger" }
audio-processor-file = { version = "1.0.0-alpha.8", path = "../../../augmented/audio/audio-processor-file" }
augmented-midi = { path = "../../../augmented/data/augmented-midi" , version = "1.0.0-alpha.7" }
augmented_oscillator = { path = "../../../augmented/audio/oscillator" , version = "1.0.0-alpha.6" }
augmented-audio-metrics = { path = "../../../augmented/ops/augmented-metrics" , version = "1.0.0-alpha.5" }

# FX
audio-processor-pitch-shifter = { path = "../../../augmented/audio/audio-processor-pitch-shifter" }
audio-processor-bitcrusher = { path = "../../../augmented/audio/audio-processor-bitcrusher" }
audio-processor-time = { path = "../../../augmented/audio/audio-processor-time" , version = "0.1.0-alpha.2" }
audio-processor-dynamics = { path = "../../../augmented/audio/audio-processor-dynamics" }
audio-processor-analysis = { path = "../../../augmented/audio/audio-processor-analysis" , version = "0.1.0-alpha.8" }
augmented-dsp-filters = { path = "../../../augmented/dsp/dsp-filters" , version = "1.0.0-alpha.7" }

audio-processor-testing-helpers = { path = "../../../augmented/testing/audio-processor-testing-helpers" , version = "1.0.0-alpha.7" }

[target.'cfg(any(target_os = "macos", target_os="ios"))'.dependencies]
cacao = { version = "0.3.0" }

[dev-dependencies]
criterion = "^0.3.4"
iai = "0.1"

[build-dependencies]
syn = "1.0"
swift-bridge-build = "0.1"

[[bench]]
name = "looper_processor_criterion"
harness = false

[package.metadata.augmented]
private = true
